# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The agent namespace
# Agent命名空间
# agent.namespace=${SW_AGENT_NAMESPACE:default-namespace}
agent.namespace=${SW_AGENT_NAMESPACE:${GWY_ENV:local}}

# The service name in UI
# UI中显示的服务名
# agent.service_name=${SW_AGENT_NAME:Your_ApplicationName}
agent.service_name=${SW_AGENT_NAME:${GWY_SPRING_APPLICATION_NAME:skywalking-agent}}

# UI中显示的实例名,如果为空,SkyWalking使用UUID@hostname作为实例名称.最大长度为50(UTF-8个字符)
agent.instance_name=${HOSTNAME:}

# The number of sampled traces per 3 seconds
# Negative or zero means off, by default
# 每3秒采样N条,负数或0表示不采样,默认不采样
# agent.sample_n_per_3_secs=${SW_AGENT_SAMPLE:-1}
# agent.sample_n_per_3_secs=${SW_AGENT_SAMPLE:400}

# Authentication active is based on backend setting, see application.yml for more details.
# agent.authentication = ${SW_AGENT_AUTHENTICATION:xxxx}

# The max amount of spans in a single segment.
# 单个段中的最大Span数
# Through this config item, SkyWalking keep your application memory cost estimated.
# 通过这个配置项,SkyWalking可以估算你的应用程序内存成本
# agent.span_limit_per_segment=${SW_AGENT_SPAN_LIMIT:150}

# If the operation name of the first span is included in this set, this segment should be ignored. Multiple values should be separated by `,`.
# agent.ignore_suffix=${SW_AGENT_IGNORE_SUFFIX:.jpg,.jpeg,.js,.css,.png,.bmp,.gif,.ico,.mp3,.mp4,.html,.svg}
# 忽略的静态资源后缀,多个值之间以","分隔
agent.ignore_suffix=${SW_AGENT_IGNORE_SUFFIX:.jpg,.jpeg,.js,.css,.png,.bmp,.gif,.ico,.mp3,.mp4,.html,.svg,.woff}

# If true, SkyWalking agent will save all instrumented classes files in `/debugging` folder.
# SkyWalking team may ask for these files in order to resolve compatible problem.
# agent.is_open_debugging_class = ${SW_AGENT_OPEN_DEBUG:true}

# If true, SkyWalking agent will cache all instrumented classes files to memory or disk files (decided by class cache mode),
# allow other javaagent to enhance those classes that enhanced by SkyWalking agent.
# agent.is_cache_enhanced_class = ${SW_AGENT_CACHE_CLASS:false}

# The instrumented classes cache mode: MEMORY or FILE
# MEMORY: cache class bytes to memory, if instrumented classes is too many or too large, it may take up more memory
# FILE: cache class bytes in `/class-cache` folder, automatically clean up cached class files when the application exits
# agent.class_cache_mode = ${SW_AGENT_CLASS_CACHE_MODE:MEMORY}

# The operationName max length
# 操作名最大长度
# Notice, in the current practice, we don't recommend the length over 190.
# 注意,在目前的实践中,我们不建议长度超过190
# agent.operation_name_threshold=${SW_AGENT_OPERATION_NAME_THRESHOLD:150}

# The agent use gRPC plain text in default.
# If true, SkyWalking agent uses TLS even no CA file detected.
# agent.force_tls=${SW_AGENT_FORCE_TLS:false}

# If true, skywalking agent will enable profile when user create a new profile task. Otherwise disable profile.
# profile.active=${SW_AGENT_PROFILE_ACTIVE:true}

# Parallel monitor segment count
# profile.max_parallel=${SW_AGENT_PROFILE_MAX_PARALLEL:5}

# Max monitor segment time(minutes), if current segment monitor time out of limit, then stop it.
# profile.duration=${SW_AGENT_PROFILE_DURATION:10}

# Max dump thread stack depth
# profile.dump_max_stack_depth=${SW_AGENT_PROFILE_DUMP_MAX_STACK_DEPTH:500}

# Snapshot transport to backend buffer size
# profile.snapshot_transport_buffer_size=${SW_AGENT_PROFILE_SNAPSHOT_TRANSPORT_BUFFER_SIZE:50}

# Backend service addresses.
# 后台服务地址：此处指的是OAP Server
collector.backend_service=${SW_AGENT_COLLECTOR_BACKEND_SERVICES:oap.default.svc.cluster.local:11800}

# Logging dir
# 日志目录
# logging.dir=${SW_LOGGING_DIR:""}
logging.dir=${SW_LOGGING_DIR:/apply/logs/${agent.namespace}/skywalking-agent/${HOSTNAME:localhost}}
logging.pattern=${SW_LOGGING_PATTERN:%timestamp %level [%thread] %class - %msg%n}

# Logging file_name
# 日志文件名
# logging.file_name=${SW_LOGGING_FILE_NAME:skywalking-api.log}
logging.file_name=${SW_LOGGING_FILE_NAME:skywalking-api.log}

# Logging level
# 日志级别
logging.level=${SW_LOGGING_LEVEL:INFO}

# Logging max_file_size, default: 300 * 1024 * 1024 = 314572800
# 日志文件的最大大小.当日志文件大小超过这个数,归档当前的日志文件,将日志写入到新文件
# logging.max_file_size=${SW_LOGGING_MAX_FILE_SIZE:314572800}
logging.max_file_size=${SW_LOGGING_MAX_FILE_SIZE:52428800}

# The max history log files. When rollover happened, if log files exceed this number,
# then the oldest file will be delete. Negative or zero means off, by default.
# 保留历史日志文件数,负数或0表示关闭,默认关闭
# logging.max_history_files=${SW_LOGGING_MAX_HISTORY_FILES:-1}
logging.max_history_files=${SW_LOGGING_MAX_HISTORY_FILES:1}

# Listed exceptions would not be treated as an error. Because in some codes, the exception is being used as a way of controlling business flow.
# Besides, the annotation named IgnoredException in the trace toolkit is another way to configure ignored exceptions.
# statuscheck.ignored_exceptions=${SW_STATUSCHECK_IGNORED_EXCEPTIONS:}

# The max recursive depth when checking the exception traced by the agent. Typically, we don't recommend setting this more than 10, which could cause a performance issue. Negative value and 0 would be ignored, which means all exceptions would make the span tagged in error status.
# statuscheck.max_recursive_depth=${SW_STATUSCHECK_MAX_RECURSIVE_DEPTH:1}

# Mount the specific folders of the plugins. Plugins in mounted folders would work.
plugin.mount=${SW_MOUNT_FOLDERS:plugins,activations}

# Exclude activated plugins
# 排除激活的插件
# plugin.exclude_plugins=${SW_EXCLUDE_PLUGINS:}

# mysql plugin configuration
# MySQL插件配置
# plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}

# Kafka producer configuration
# Kafka生产者配置
# plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Match spring bean with regex expression for classname
# Spring bean使用类名的正则表达式进行匹配：满足条件的进行跟踪,但是性能代价,慎重使用
# plugin.springannotation.classname_match_regex=${SW_SPRINGANNOTATION_CLASSNAME_MATCH_REGEX:}
