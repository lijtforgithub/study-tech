input {
  #beats { port => 5044 }
  kafka {
    codec => json
    bootstrap_servers => "192.168.100.169:9092"
    sasl_mechanism => "PLAIN"
    security_protocol => "SASL_PLAINTEXT"
    sasl_jaas_config => "org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka' password='kafkaFSGsnW$B&JSbG3w0IAgO';"
    group_id => "logstash"
    topics => ["elastic_logs_topic"]
  }
}

filter {
  mutate {
    split => [ "[log][file][path]", "/" ]
    add_field => {
      "app" => "%{[log][file][path][4]}"
      "hostname" => "%{[log][file][path][5]}"
      "[@metadata][fileName]" => "%{[log][file][path][6]}"
    }
    remove_field => [ "log", "agent", "ecs", "host", "input" ]
  }

  if [@metadata][fileName] == "monitor-access_logs.log" or [@metadata][fileName] == "monitor-alarm_logs.log" {
    dissect { mapping => { "message" => "%{ts} %{+ts} %{level} [%{[@metadata][thread]}] %{[@metadata][clazz]} - %{[@metadata][msg]}" } }
    json {
      skip_on_invalid_json => true
      source => "[@metadata][msg]"
    }
  } else {
    dissect {
      mapping => { "message" => "%{ts} %{+ts} %{level} [%{thread}] %{msg}" }
    }
  }

  if [ts] {
    ruby {
      code => "event.set('[@metadata][date]', event.get('ts')[0..9])"
    }
    date {
      match => [ "ts", "ISO8601" ]
      target => "@timestamp"
      remove_field => [ "ts" ]
    }
  }
  if [level] {
    mutate { strip => ["level"] }
  }
  if [message] {
    mutate { remove_field => [ "message" ] }
  }
}

output {
  if [@metadata][fileName] == "monitor-alarm_logs.log" {
    kafka {
      codec => json
      bootstrap_servers => "192.168.100.169:9092"
      sasl_mechanism => "PLAIN"
      security_protocol => "SASL_PLAINTEXT"
      sasl_jaas_config => "org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka' password='kafkaFSGsnW$B&JSbG3w0IAgO';"
      client_id => "logstash"
      topic_id => "gwy_alarm_message"
      retries => 1
    }
  } else if [@metadata][fileName] == "monitor-access_logs.log" {
    elasticsearch {
      hosts => ["192.168.100.7:9200", "192.168.100.125:9200", "192.168.100.158:9200"]
      user => "elastic"
      password => "esIuV7G^lD1@gMCN&4Ig%a"
      index => "access-logs-%{[@metadata][date]}"
      document_type => "_doc"
      http_compression => true
      manage_template => false
      retry_on_conflict => 0
    }
  } else {
    elasticsearch {
      hosts => ["192.168.100.7:9200", "192.168.100.125:9200", "192.168.100.158:9200"]
      user => "elastic"
      password => "esIuV7G^lD1@gMCN&4Ig%a"
      index => "logs-%{[@metadata][date]}"
      document_type => "_doc"
      http_compression => true
      manage_template => false
      retry_on_conflict => 0
    }
  }
}
